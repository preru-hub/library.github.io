<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Universal Book Search ðŸ“š</title>
  <link href="https://fonts.googleapis.com/css2?family=Merriweather:wght@400;700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      max-width: 900px;
      margin: 0 auto;
      padding: 30px;
      background-color: #FAF0E6;
      color: #333;
    }
    h1 {
      font-family: 'Merriweather', serif;
      text-align: center;
      color: #4A4A4A;
      margin-bottom: 5px;
    }
    p { text-align: center; color: #8B4513; font-size: 1.1em; }

    #searchForm {
      display: flex;
      margin-bottom: 30px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      border-radius: 8px;
      overflow: hidden;
    }
    #searchInput {
      flex: 1;
      padding: 12px 15px;
      font-size: 17px;
      border: none;
      background-color: #FFF;
    }
    #searchButton {
      padding: 12px 25px;
      background-color: #D2B48C;
      color: white;
      border: none;
      cursor: pointer;
      font-size: 17px;
      font-weight: bold;
      transition: background-color 0.2s ease;
    }
    #searchButton:hover { background-color: #B8860B; }

    #results {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 25px;
    }
    .book-item {
      background: #FFF;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .book-item:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    }
    .book-title {
      font-family: 'Merriweather', serif;
      font-size: 20px;
      font-weight: 700;
      color: #384236;
      margin-bottom: 8px;
      line-height: 1.2;
    }
    .book-authors {
      color: #8B4513;
      font-style: italic;
      margin-bottom: 10px;
      font-size: 0.95em;
    }
    .book-description {
      color: #555;
      line-height: 1.5;
      margin-bottom: 15px;
      font-size: 0.9em;
    }
    .book-thumbnail {
      float: left;
      margin-right: 15px;
      width: 90px;
      height: auto;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    .book-item a {
      color: #D2B48C;
      text-decoration: none;
      margin-right: 15px;
      font-weight: bold;
    }
    .book-item a:hover { color: #8B4513; }
    #loading, .no-results {
      text-align: center;
      color: #8B4513;
      font-style: italic;
      padding: 15px;
    }
    #loading { font-weight: bold; font-size: 1.2em; }
  </style>
</head>
<body>
  <h1>Universal Book Search ðŸ“š</h1>
  <p>Find real, available books â€” free, previewable, or for purchase.</p>

  <form id="searchForm">
    <input type="text" id="searchInput" placeholder="Enter title, author, or keywords..." required>
    <button type="submit" id="searchButton">Search</button>
  </form>

  <div id="loading" style="display:none;">Searching the stacks...</div>
  <div id="results"></div>

  <script>
    const googleBooksURL = 'https://www.googleapis.com/books/v1/volumes?q=';
    // Removed Open Library URL

    const searchForm = document.getElementById('searchForm');
    const searchInput = document.getElementById('searchInput');
    const resultsDiv = document.getElementById('results');
    const loadingDiv = document.getElementById('loading');

    searchForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const query = searchInput.value.trim();
      if (!query) return;

      loadingDiv.style.display = 'block';
      resultsDiv.innerHTML = '';

      try {
        // Fetch only from Google Books
        const googleRes = await fetch(googleBooksURL + encodeURIComponent(query) + '&maxResults=20');
        const googleData = await googleRes.json();

        const books = [];

        // Google Books results
        if (googleData.items) {
          googleData.items.forEach(book => {
            const info = book.volumeInfo;
            const access = book.accessInfo;

            // Check if full text is available for free or as a public domain book
            const isFullFree = access?.publicDomain === true || access?.viewability === 'FULL';

            books.push({
              title: info.title || 'Unknown Title',
              authors: info.authors?.join(', ') || 'Unknown Author',
              description: info.description || 'No description available.',
              thumbnail: info.imageLinks?.thumbnail,
              // If it's public domain or full view, use the webReaderLink as the "Download" (reader) link
              // Otherwise, use the preview link
              readerLink: isFullFree ? access?.webReaderLink : info.previewLink,
              isFullFree: isFullFree,
              buy: book.saleInfo?.buyLink,
            });
          });
        }

        if (books.length === 0) {
          resultsDiv.innerHTML = '<div class="no-results">No books found. Try another search term.</div>';
          return;
        }

        books.forEach(b => {
          const item = document.createElement('div');
          item.className = 'book-item';
          item.innerHTML = `
            ${b.thumbnail ? `<img src="${b.thumbnail}" alt="${b.title}" class="book-thumbnail">` : ''}
            <div class="book-title">${b.title}</div>
            <div class="book-authors">By ${b.authors}</div>
            <div class="book-description">${b.description.substring(0, 200)}...</div>
            <div style="clear: both;"></div>
            ${b.readerLink ? `<a href="${b.readerLink}" target="_blank">${b.isFullFree ? 'Read Online / Full View' : 'Preview'}</a>` : ''}
            ${b.buy ? `<a href="${b.buy}" target="_blank">Buy</a>` : ''}
          `;
          resultsDiv.appendChild(item);
        });

      } catch (error) {
        console.error(error);
        resultsDiv.innerHTML = '<div class="no-results">An error occurred. Please try again later.</div>';
      } finally {
        loadingDiv.style.display = 'none';
      }
    });
  </script>
</body>
</html>
